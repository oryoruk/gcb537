#!usr/bin/python

# NAME:  ONUR YORUK
# CLASS: GCB537 - SPRING 2016
# EXERCISE 2 PROGRAMMING

import pickle
import numpy as np
from scipy import linalg

INPUT_DIR = '../Ex2Prog/'
OUTPUT_DIR = '../output/'


# function for residual sum of squares
def rss(y, y_hat):
    return np.power(y - y_hat, 2).sum()

#function that returns indices for cross validation
def CV_fold_indices(total_no, CV_fold_no):
    fold_size = total_no/int(CV_fold_no)
    indices = []
    starts = range(0,total_no,fold_size)[:CV_fold_no]
    ends = range(0,total_no,fold_size)[1:CV_fold_no] + [total_no]
    return zip(starts,ends)

# provided ridge regression function
def ridge(A, b, alphas):
    """
    Return coefficients for regularized least squares

         min ||A x - b||^2 + alpha ||x||^2

    Parameters
    ----------
    A : array, shape (n, p)
    b : array, shape (n,)
    alphas : array, shape (k,)

    Returns
    ----------
    coef: array, shape (p, k)
    """

    U, s, Vt = linalg.svd(A, full_matrices=False)
    d = s / (s[:, np.newaxis].T ** 2 + alphas[:, np.newaxis])
    return np.dot(d * U.T.dot(b), Vt).T


# loading serialized files generated by 'generateX.py'
X_filename = OUTPUT_DIR + 'probs_of_being_regulated.pickle'
y_array_filename = OUTPUT_DIR + 'experiments.pickle'

fileObject = open(X_filename, 'r')
X = pickle.load(fileObject)
fileObject = open(y_array_filename, 'r')
y_array = pickle.load(fileObject)

print y_array
print 'variables loaded'


n,p = X.shape
_, exp_no = y_array.shape
k = 1000

"""
'#InputFile: Expression'+str(i+1)+'.tab'
#Lambda
#RSS
#W0
#W
"""


